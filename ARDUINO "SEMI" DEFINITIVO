#include <HX711.h>
#define DOUT  A1
#define CLK  A0
#include <Servo.h>
const int s0 = 8;  
const int s1 = 9;  
const int s2 = 12;  
const int s3 = 11;  
const int out = 10;    
int rojo = 0;  
int verde = 0;  
int azul = 0; 
#include <LiquidCrystal.h>  

HX711 balanza;
Servo servoMotor;
int i;
int frecuenciaRojo = 0;
int frecuenciaVerde = 0;
int frecuenciaAzul = 0;
int colorRojo;
int colorVerde;
int colorAzul;
int LED = 29;
int LED1 = 27;
LiquidCrystal lcd(7, 6, 5, 4, 3, 2);  // pines RS, E, D3, D2, D1, D0 de modulo 1602A


void setup() {
Serial.begin(9600);
balanza.begin(DOUT, CLK);
  // Serial.print("Lectura del valor del ADC:  ");
  // Serial.println(balanza.read());
  // Serial.println("No ponga ningun  objeto sobre la balanza");
  // Serial.println("Destarando...");
  // Serial.println("...");
  balanza.set_scale(439430.25); // Establecemos la escala
  balanza.tare(20);  //El peso actual es considerado Tara.
  
  // Serial.println("Listo para pesar");  
//declaramos el servomotor//

 
   // Iniciamos el monitor serie para mostrar el resultado
 
  // Iniciamos el servo para que empiece a trabajar con el pin 9
  servoMotor.attach(22);
 

  servoMotor.write(115);


 pinMode(s0,OUTPUT);  
  pinMode(s1,OUTPUT);  
  pinMode(s2,OUTPUT);  
  pinMode(s3,OUTPUT);  
  pinMode(out,INPUT);   
  digitalWrite(s0,HIGH);  
digitalWrite(s1,HIGH); 
  
  lcd.begin(16, 2);     // inicializa a display de 16 columnas y 2 lineas

  
pinMode(LED, OUTPUT);
pinMode(LED1, OUTPUT);
}

void loop() {
  
digitalWrite(LED, LOW);

digitalWrite(LED1, LOW);

 lcd.setCursor(0, 0);      // ubica cursor en columna 0, linea 0
 lcd.print("Introduzca ");  // escribe el texto en pantalla
 lcd.setCursor(0, 1);      // ubica cursor en columna 0, linea 1
 lcd.print("moneda 1 EURO."); // imprime a continuacion abreviatura de segundos
 
  // Serial.print("Peso: ");
  // Serial.print(balanza.get_units(20),3);
  // Serial.println(" kg");
  if(balanza.read()==0)
  { 
    //Empieza en 115
    servoMotor.write(115);
    delay(500);
    
   digitalWrite(LED1, HIGH);

   lcd.clear();
   lcd.setCursor(0, 0);      // ubica cursor en columna 0, linea 0
   lcd.print("Procesando...");  // escribe el texto en pantalla
   lcd.setCursor(0, 1);      // ubica cursor en columna 0, linea 0
   lcd.print("futuro...");  // escribe el texto en pantalla
 
   for (i=0;i<=3;i++)
    {
      //Avanza de 115 a 65, posición donde está el sensor de color. Ahí, se detiene con un delay de 500.
      for(int i = 115; i > 65; i--) {
        servoMotor.write(i);
        delay(2);
      }
      colores[i]=sensorcolor();
      delay(500);
      
      //Avanza de 65 a 29, posición donde está el agujero para que caiga el caramelo.
      for(int i = 65; i > 29; i--) {
        servoMotor.write(i);
        delay(2);
      } 
      delay(500);
      
      //Vuelve a la posicion de 115, donde recoje otro caramelo.
      for(int i = 29; i < 115; i++) {
        servoMotor.write(i);
        delay(2);
      }
     delay(500);
    }
    servoMotor.detach();
    
      
   }else
  {
   delay(5000);
   
   digitalWrite(LED, HIGH);

   lcd.clear();
   lcd.setCursor(0, 0);      // ubica cursor en columna 0, linea 0
   lcd.print("Moneda");  // escribe el texto en pantalla
   lcd.setCursor(0, 1);      // ubica cursor en columna 0, linea 1
   lcd.print("incorrecta."); // imprime a continuacion abreviatura de segundos
   delay(5000);
  }

  
  }

  int sensorcolor(int n, int vector[] ){  
  color(); 
  Serial.print("   ");  
  Serial.print(rojo, DEC);  
  Serial.print("   ");  
  Serial.print(verde, DEC);  
  Serial.print("   ");  
  Serial.print(azul, DEC);  

  if (rojo < azul && verde > azul && rojo < 35) 
  {  
   //Serial.println("   Rojo");
   vector[n] = 1;
  }   
  else if (azul < rojo && azul < verde && verde < rojo)  
  {  
   Serial.println("   Azul"); 
   vector[n] = 2;
  }  

  else if (rojo > verde && azul > verde )  
  {  
   Serial.println("   Verde");
   vector[n] = 3;
  }  
  else{
  Serial.println("  ");  
  }
  delay(900);     
  }  
    
void color()  
{    
  digitalWrite(s2, LOW);  
  digitalWrite(s3, LOW);   
  rojo = pulseIn(out, digitalRead(out) == HIGH ? LOW : HIGH);  
  digitalWrite(s3, HIGH);   
  azul = pulseIn(out, digitalRead(out) == HIGH ? LOW : HIGH);  
  digitalWrite(s2, HIGH);    
  verde = pulseIn(out, digitalRead(out) == HIGH ? LOW : HIGH);  
}
  
